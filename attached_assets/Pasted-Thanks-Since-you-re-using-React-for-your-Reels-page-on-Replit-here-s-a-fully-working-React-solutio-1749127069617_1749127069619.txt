Thanks! Since you're using React for your Reels page on Replit, here's a fully working React solution that:

✅ Autoplays only the visible video
✅ Pauses all other videos
✅ Requires no manual interaction
✅ Works in Replit if video is muted + playsinline


---

✅ Final React Code with Promises + IntersectionObserver

Here’s a clean and reusable way to fix the problem.


---

✅ ReelsPage.jsx

import React, { useEffect, useRef } from 'react';

const ReelsPage = () => {
  const videoRefs = useRef([]);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const video = entry.target;
          if (entry.isIntersecting) {
            video
              .play()
              .then(() => {
                console.log('Playing', video.src);
              })
              .catch((err) => {
                console.warn('Autoplay blocked:', err);
              });
          } else {
            video.pause();
            video.currentTime = 0; // Optional: reset to start
          }
        });
      },
      {
        threshold: 0.75, // Only when 75% is visible
      }
    );

    videoRefs.current.forEach((video) => {
      if (video) observer.observe(video);
    });

    return () => {
      videoRefs.current.forEach((video) => {
        if (video) observer.unobserve(video);
      });
    };
  }, []);

  const reelVideos = [
    'https://www.w3schools.com/html/mov_bbb.mp4',
    'https://www.w3schools.com/html/movie.mp4',
    // Add more video URLs
  ];

  return (
    <div style={{ overflowY: 'scroll', height: '100vh' }}>
      {reelVideos.map((src, i) => (
        <div key={i} style={{ height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
          <video
            ref={(el) => (videoRefs.current[i] = el)}
            src={src}
            muted
            loop
            playsInline
            style={{ width: '100%', height: '100%', objectFit: 'cover' }}
          />
        </div>
      ))}
    </div>
  );
};

export default ReelsPage;


---

✅ How This Works

videoRefs stores all your video DOM elements.

IntersectionObserver tracks which video is visible.

Plays the visible one using .play().then() to handle autoplay Promise.

Pauses others + resets to currentTime = 0 (optional).



---

⚠ Important Notes for Replit

Always open in full browser tab, not Replit preview pane.

Videos must be muted or browsers will block autoplay.

Works with React 17, 18+, Replit React template, or Next.js.



---

Would you like this refact